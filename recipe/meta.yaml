{% set version = "3.40.0" %}
{% set year = "2022" %}
{% set version_split = version.split(".") %}
{% set major = version_split[0] %}
{% set minor = version_split[1]|int * 10 %}
{% set bugfix = version_split[2]|int * 100 %}
{% set version_coded=(major ~ (("%03d" % minor)|string) ~ (("%03d" % bugfix)|string)) %}

package:
  name: sqlite
  version: {{ version }}

source:
  url: https://www.sqlite.org/{{ year }}/sqlite-autoconf-{{ version_coded }}.tar.gz
  sha256: 0333552076d2700c75352256e91c78bf5cd62491589ba0c69aed0a81868980e7
  patches:
    - expose_symbols.patch  # [win]
    - 0001-Fix-safe-mode-authorizer-callback-to-reject-disallowed-UDFs.patch

build:
  number: 1
  run_exports:
    # sometimes adds new symbols.  Default behavior is OK.
    #    https://abi-laboratory.pro/tracker/timeline/sqlite/
    - {{ pin_subpackage('sqlite') }}
  ignore_run_exports:
    - ncurses

requirements:
  build:
    - {{ compiler('c') }}
    - make      # [not win]
    - libtool   # [not win]
    - m2-patch  # [win]
    - patch     # [not win]
  host:
    - ncurses   # [not win]
    - readline  # [not win]
    - zlib      # [not win]
  run:
    - readline  # [not win]
    - zlib      # [not win]

test:
  commands:
    - sqlite3 --version
    - if not exist %PREFIX%\\Library\bin\sqlite3.dll exit 1       # [win]
    - if not exist %PREFIX%\\Library\lib\sqlite3.lib exit 1       # [win]
    - test -f $PREFIX/lib/libsqlite3${SHLIB_EXT}                  # [not win]
    - test ! -f $PREFIX/lib/libsqlite3.a                          # [not win]
    - if not exist %PREFIX%\\Library\include\sqlite3.h exit 1     # [win]
    - if not exist %PREFIX%\\Library\include\sqlite3ext.h exit 1  # [win]
    - test -f $PREFIX/include/sqlite3.h                           # [not win]
    - test -f $PREFIX/include/sqlite3ext.h                        # [not win]
    # 2022-12-16: Test if --safe does not prevent writefile() and readfile()
    # Remove it when the release >=3.40.1 is out.
    - sqlite3 --safe ":memory:" "SELECT writefile('secret.txt', randomblob(5))" || true  # [not win]
    - sqlite3 --safe ":memory:" "SELECT readfile('secret.txt')" || true                  # [not win]
    - cat secret.txt || true                                                             # [not win]
    - sqlite3 --safe ":memory:" "SELECT writefile('secret.txt', randomblob(5))" || cmd /K "exit /b 0"  # [win]
    - sqlite3 --safe ":memory:" "SELECT readfile('secret.txt')" || cmd /K "exit /b 0"                  # [win]
    - cat secret.txt  || cmd /K "exit /b 0"                                                            # [win]

about:
  home: https://www.sqlite.org/
  license: blessing
  license_file: LICENSE.md
  license_url: https://www.sqlite.org/copyright.html
  license_family: Other
  summary: Implements a self-contained, zero-configuration, SQL database engine
  description: |
    SQLite is a self-contained, high-reliability, embedded, full-featured,
    public-domain, SQL database engine. It is the most used database engine
    in the world.
  doc_url: https://www.sqlite.org/docs.html
  doc_source_url: https://sqlite.org/src/dir?ci=trunk&name=doc
  dev_url: https://sqlite.org/src/dir?ci=trunk

extra:
  recipe-maintainers:
    - jakirkham
    - jjhelmus
    - msarahan
    - ocefpaf
    - snorfalorpagus
    - mingwandroid
    - xylar
